name: Build

on: [push]
#on:
#  release:
#    types: [created]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, macos-latest, windows-latest]
    name: ${{ matrix.platform }}
    runs-on: ${{ matrix.platform }}
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1

    - name: Set Environment Variables
      uses: allenevans/set-env@v1.0.0
      with:
        PACKAGE_NAME: "faster_than_walk"
        PACKAGE_VERSION: "1.9"
        MAIN_MODULE: "src/faster_than_walk.nim"
        TWINE_NON_INTERACTIVE: 1
        CHOOSENIM_NO_ANALYTICS: 1
        PYTHONDONTWRITEBYTECODE: 1
        GITHUB_TOKEN:   ${{ secrets.COMMIT_TOKEN }}
        TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
        TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        #TWINE_REPOSITORY_URL: "https://test.pypi.org/legacy/"
        #TWINE_REPOSITORY: "https://test.pypi.org/legacy/"


    - name: Update Python PIP
      run: pip3 install --quiet --user --upgrade --disable-pip-version-check pip twine


    - name: Clone Nim
      run: |
        git clone -q --depth 1 https://github.com/nim-lang/Nim.git
        echo "::add-path::$PWD/Nim/bin"


    - name: Build Nim (Unix)
      if: runner.os == 'Linux' || runner.os == 'macOS'
      run: |
        cd Nim
        ./build_all.sh


    - name: Build Nim (Windows)
      if: runner.os == 'Windows'
      run: |
        cd Nim
        ./build_all.bat


    - name: Nimble Refresh
      run: nimble -y refresh


    - name: Nimble Install dependencies
      run: nimble -y install nimpy


    - name: Prepare Folders
      if: runner.os == 'Linux'
      run: mkdir -p dist/lin dist/win dist/mac dist/$PACKAGE_NAME.egg-info


    - name: Prepare Files
      if: runner.os == 'Linux'
      run: |
        touch dist/LICENSE dist/$PACKAGE_NAME.egg-info/zip-safe dist/$PACKAGE_NAME.egg-info/top_level.txt dist/$PACKAGE_NAME.egg-info/requires.txt dist/$PACKAGE_NAME.egg-info/dependency_links.txt
        cp --force $PWD/setup.py          dist/setup.py
        cp --force $PWD/setup.cfg         dist/setup.cfg
        cp --force $PWD/Nim/lib/nimbase.h dist/lin/nimbase.h
        cp --force $PWD/Nim/lib/nimbase.h dist/win/nimbase.h
        cp --force $PWD/Nim/lib/nimbase.h dist/mac/nimbase.h
        cp --force $PWD/PKG-INFO          dist/$PACKAGE_NAME.egg-info/PKG-INFO


    - name: Nim Check
      if: runner.os == 'Linux' || runner.os == 'macOS'
      run: nim check --styleCheck:hint $MAIN_MODULE


    - name: Compile (Linux)
      if: runner.os == 'Linux'
      run: nim compileToC --compileOnly:on --nimcache:dist/lin/ $MAIN_MODULE


    - name: Compile (Windows)
      if: runner.os == 'Windows'
      run: nim compileToC --compileOnly:on --nimcache:dist/win/ src/faster_than_walk.nim


    - name: Compile (Mac)
      if: runner.os == 'macOS'
      run: nim compileToC --compileOnly:on --nimcache:dist/mac/ $MAIN_MODULE


    - name: Clean out
      if: runner.os == 'Linux'
      run: rm --force --verbose dist/lin/*.json dist/win/*.json dist/mac/*.json dist/lin/*.o dist/win/*.o dist/mac/*.o


    - name: Compress to ZIP
      if: runner.os == 'Linux'
      run: |
        cd dist
        rm --force --verbose *.zip
        zip -9 -T -v -r $PACKAGE_NAME-$PACKAGE_VERSION.zip *


    # - name: Install locally for Testing
    #   run: |
    #     pip3 install --user --disable-pip-version-check dist/$PACKAGE_NAME-$PACKAGE_VERSION.zip --no-binary :all:


    - uses: EndBug/add-and-commit@v4
      with:
        add: 'dist'
        author_name: Juan Carlos
        force: true
        message: 'Fully Automated Luxury Python'


    - name: Cache Nim
      uses: actions/cache@v1
      with:
        path: $PWD/Nim/
        key: ${{ runner.os }}-nim


    - name: Cache Nimble
      uses: actions/cache@v1
      with:
        path: $PWD/.nimble/
        key: ${{ runner.os }}-nimble


    # - name: Publish to PYPI (Test Server)
    #   run: twine upload --verbose --disable-progress-bar --repository-url 'https://test.pypi.org/legacy/' --comment 'Powered by https://Nim-lang.org' dist/*.zip
